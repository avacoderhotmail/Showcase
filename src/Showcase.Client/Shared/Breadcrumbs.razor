@using Microsoft.AspNetCore.Components.Routing
@using Showcase.Client.Services
@inject IBreadcrumbService BreadcrumbsResolver

<nav aria-label="breadcrumb" class="mb-3">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="/">Home</a>
        </li>

        @for (int i = 0; i < Segments.Count; i++)
        {
            if (i >= ResolvedSegments.Count)
                continue;

            var segment = Segments[i];
            var path = "/" + string.Join("/", Segments.Take(i + 1));

            if (i < Segments.Count - 1)
            {
                <li class="breadcrumb-item">
                    <a href="@path">@ResolvedSegments[i]</a>
                </li>
            }
            else
            {
                <li class="breadcrumb-item active" aria-current="page">
                    @ResolvedSegments[i]
                </li>
            }
        }
    </ol>
</nav>

@code {
    [Parameter] public string CurrentPath { get; set; } = "";

    private List<string> Segments =>
        CurrentPath?.Trim('/')
                   .Split('/', StringSplitOptions.RemoveEmptyEntries)
                   .ToList() ?? new();

    private List<string> ResolvedSegments = new();

    protected override async Task OnParametersSetAsync()
    {
        ResolvedSegments.Clear();

        for (int i = 0; i < Segments.Count; i++)
        {
            var parentPath = string.Join("/", Segments.Take(i));
            var label = await BreadcrumbsResolver.ResolveSegmentAsync(Segments[i], parentPath);
            ResolvedSegments.Add(label ?? Segments[i]);
        }
    }
}
