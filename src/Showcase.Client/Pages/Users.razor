@page "/users"
@using Microsoft.AspNetCore.Authorization
@using Showcase.Client.Services
@using Showcase.Contracts.Contracts.User
@using Showcase.Client.Shared
@inject IUserApiService UserApiService
@inject NavigationManager Nav
@attribute [Authorize]

<h3>Users</h3>
<button @onclick="ShowModal">+ New User</button>

@if (loading)
{
    <p>Loading users...</p>
}
else if (errorMessage != null)
{
    <p class="text-danger">@errorMessage</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Email</th>
                <th>Display Name</th>
                <th>Roles</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.Email</td>
                    <td>@user.DisplayName</td>
                    <td>
                        @if (user.Roles.Any())
                        {
                            <ul class="list-unstyled mb-0">
                                @foreach (var role in user.Roles)
                                {
                                    <li>@role</li>
                                }
                            </ul>
                        }
                        else
                        {
                            <em>No roles assigned</em>
                        }
                    </td>

                </tr>
            }
        </tbody>
    </table>
}

<ReusableModal />

@code {
    private List<UserDto> users = new();
    private bool loading = true;
    private string? errorMessage;
    private CreateUserDto newUser = new();
    private bool isModalOpen = false;

    private void ShowModal()
    {
        newUser = new CreateUserDto();
        isModalOpen = true;
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            users = (await UserApiService.GetUsersAsync()).ToList();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading users: {ex.Message}";
        }
        finally
        {
            loading = false;
        }
    }
}
